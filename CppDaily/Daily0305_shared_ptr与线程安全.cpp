//daily0305
/************************************************************************/
/* shared_ptr与线程安全
shared_ptr的线程安全涉及到两部分，shared_ptr本身的线程安全与s_ptr所指向内容的安全.

1.s_ptr所指向的内容的安全，需要加锁处理，如同解决传统的资源竞争那样
2.s_ptr本身的安全
	a.如果对s_ptr只有读操作，引用计数的增加本身就是原子的，所以不用特殊处理
	b.如果对s_ptr有写操作（改变了所指向的对象），那么多线程情况下，是不安全。
	有如下针对shared_ptr进行原子操作的函数：
	atomic_store(&sp0,sp1);//把sp1安全地写入sp0
	atomic_load(&sp);//安全读取sp
	atomic_exchange(&sp0,sp1);//安全交换sp0和sp1所指向的内容
	atomic_is_lock_free(&sp);//sp的atomic接口如果是lockfree就返回true.



*/
/************************************************************************/

//该部分内容需与多线程部分合作